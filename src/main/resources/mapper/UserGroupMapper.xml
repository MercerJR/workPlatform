<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.workplatform.dao.UserGroupMapper">
  <resultMap id="BaseResultMap" type="com.project.workplatform.pojo.UserGroup">
    <!--@mbg.generated-->
    <!--@Table user_group-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="msg_ack_id" jdbcType="INTEGER" property="msgAckId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, group_id, role_id, msg_ack_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from user_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from user_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.project.workplatform.pojo.UserGroup" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user_group (user_id, group_id, role_id, 
      msg_ack_id)
    values (#{userId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{msgAckId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.project.workplatform.pojo.UserGroup" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="msgAckId != null">
        msg_ack_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="msgAckId != null">
        #{msgAckId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.workplatform.pojo.UserGroup">
    <!--@mbg.generated-->
    update user_group
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="msgAckId != null">
        msg_ack_id = #{msgAckId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.workplatform.pojo.UserGroup">
    <!--@mbg.generated-->
    update user_group
    set user_id = #{userId,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      msg_ack_id = #{msgAckId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByUserAndGroup" resultType="com.project.workplatform.pojo.UserGroup">
        select * from user_group
        where user_id = #{userId} and group_id = #{groupId}
    </select>
    <select id="selectMemberByGroup" resultType="com.project.workplatform.data.response.group.MemberResponse">
        select ui.user_id as userId,ifnull(ug.nickname,ui.name) as nickname,ui.name,ug.role_id,gr.role from user_group as ug inner join user_info as ui inner join group_role as gr
        on ug.user_id = ui.user_id and ug.role_id = gr.role_id
        where ug.group_id = #{groupId}
    </select>
    <select id="selectByUser" resultType="com.project.workplatform.data.response.group.GroupResponse">
        select g.id as groupId,g.group_name from user_group as ug inner join `group` as g
        on ug.group_id = g.id
        where ug.user_id = #{userId} and g.type = #{type}
    </select>
    <update id="updateRoleByUserAndGroup">
        update user_group
        set role_id = #{roleId}
        where user_id = #{userId} and group_id = #{groupId}
    </update>
    <update id="updateMsgAckIdByUserAndGroup">
        update user_group
        set msg_ack_id = #{msgAckId}
        where user_id = #{userId} and group_id = #{groupId}
    </update>
</mapper>